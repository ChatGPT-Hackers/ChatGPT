name: Auto Pull Requests

on:
  pull_request

permissions:
  pull-requests: write

jobs:
  welcome:
    runs-on: ubuntu-latest
    steps:
    - name: Welcome New Contributor
      uses: actions/github-script@v6
      with:
          script: |
            // Get a list of all issues created by the PR opener
            // See: https://octokit.github.io/rest.js/#pagination
            const creator = context.payload.sender.login
            const opts = github.rest.issues.listForRepo.endpoint.merge({
              ...context.issue,
              creator,
              state: 'all'
            })
            const issues = await github.paginate(opts)

            for (const issue of issues) {
              if (issue.number === context.issue.number) {
                continue
              }

              if (issue.pull_request) {
                return // Creator is already a contributor.
              }
            }

            await github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `**Welcome**, new contributor!

                Please make sure you've read our [contributing guide](https://github.com/acheong08/ChatGPT/blob/main/docs/CONTRIBUTING.md) and we look forward to reviewing your Pull request shortly âœ¨`
            })
  assign_dev_branch:
    runs-on: ubuntu-latest
    steps:
      - name: Assign to dev branch
        uses: actions/github-script@v4
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const payload = github.context.payload;
            const prNumber = payload.number;
            const repoName = payload.repository.name;
            const ownerName = payload.repository.owner.login;
            const branchName = 'dev';

            github.git.getRef({
              owner: ownerName,
              repo: repoName,
              ref: `heads/${branchName}`
            }).then(result => {
              const branchRef = result.data.ref;
              github.pulls.update({
                owner: ownerName,
                repo: repoName,
                pull_number: prNumber,
                base: branchRef
              });
            }).catch(error => {
              console.log(error);
            });